{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "consortiumName": {
      "type": "string",
      "maxLength": 10,
      "metadata": {
        "description": "A short identifier to distinguish machines in this membership"
      }
    },
    "username": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "sshPublicKey": {
      "type": "string",
      "metadata": {
        "description": "ssh public key for connecting to VMs."
      }
    },
    "genesisUrl": {
      "type": "securestring",
      "metadata": {
        "description": "A url used to download the JSON which describes the genesis block"
      }
    },
    "gethNetworkId": {
      "type": "securestring",
      "metadata": {
        "description": "A unique id used to ensure only machines on the same network can talk to each other"
      }
    },
    "dashboardSecret": {
      "type": "securestring",
      "metadata": {
        "description": "A unique string to used to ensure only machines with the secret can post to the dashboard"
      }
    },
    "minerAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If miners is more than 0, then an address must be specified"
      }
    },
    "minerVMSku": {
      "defaultValue": "Standard_DS2_v2",
      "type": "string"
    },
    "minerCount": {
      "defaultValue": 2,
      "type": "int"
    },
    "txnodeVMSku": {
      "defaultValue": "Standard_DS1_v2",
      "type": "string"
    },
    "txnodeCount": {
      "defaultValue": 3,
      "type": "int"
    },
    "locationOverride": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Location to deploy resources. By default the template will use the Resource Group location"
      }
    },
    "contentRoot" : {
      "defaultValue" : "https://raw.githubusercontent.com/EthereumEx/ethereum-arm-templates/master/ethereum-consortium-blockchain-member",
      "type" :"string"
    }
  },
  "variables": {
    "contentRoot" : "[parameters('contentRoot')]",
    "deploymentId": "[toLower(substring(uniqueString(resourceGroup().Id), 0, 10))]",
    "apiVersion": "2015-06-15",
    "resourceLocations": [
      "[resourceGroup().location]",
      "[parameters('locationOverride')]"
    ],
    "resourceLocation": "[variables('resourceLocations')[length(substring(parameters('locationOverride'),0,1))]]",
    "storageAccountType": "Premium_LRS",
    "saCount": 5,
    "namingInfix": "[toLower(parameters('consortiumName'))]",
    "storageAccounts": [
      "[concat('savmss01x', variables('deploymentId'))]",
      "[concat('savmss02x', variables('deploymentId'))]",
      "[concat('savmss03x', variables('deploymentId'))]",
      "[concat('savmss04x', variables('deploymentId'))]",
      "[concat('savmss05x', variables('deploymentId'))]"
    ],
    "scriptName" : "runScripts.sh",
    "machineSetupScriptUri": "[concat(variables('contentRoot'), '/', variables('scriptName'))]",
    "scriptCommand" : "[concat('sh ', variables('scriptName'), ' ')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccounts')[copyIndex()]]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[variables('resourceLocation')]",
      "copy": {
        "name": "storageLoop",
        "count": "[variables('saCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "Consortium.Network",
      "apiVersion": "2015-11-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(variables('contentRoot'), '/template.network.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('resourceLocation')]"
          },
          "namingInfix": {
            "value": "[variables('namingInfix')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "VM.Dashboard",
      "apiVersion": "2015-11-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(variables('contentRoot'), '/template.vm.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('resourceLocation')]"
          },
          "username": {
            "value": "[parameters('username')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "machineName": {
            "value": "[concat(variables('namingInfix'), '-dashboard')]"
          },
          "scriptUri": {
            "value": "[variables('machineSetupScriptUri')]"
          },
          "scriptCommand": {
            "value": "[concat(variables('scriptCommand'), variables('contentRoot'), ' ', parameters('dashboardSecret'))]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccounts')[0]]"
          },
          "vmSku": {
            "value": "[parameters('txnodeVMSku')]"
          },
          "ids": {
            "value": {
              "subnet": "[reference('Consortium.Network').outputs.network.value.subnets.dashboard]",
              "vnet": "[reference('Consortium.Network').outputs.network.value.id]",
              "nsg": "[reference('Consortium.Network').outputs.network.value.nsg.dashboard]"
            }
          }
        }
      },
      "dependsOn": [
        "storageLoop",
        "Consortium.Network"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "VMSS.TxNodes",
      "apiVersion": "2015-11-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(variables('contentRoot'), '/template.vmss.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('resourceLocation')]"
          },
          "vmssName": {
            "value": "[concat(variables('namingInfix'), '-n-tx')]"
          },
          "vmSku": {
            "value": "[parameters('txnodeVMSku')]"
          },
          "image": {
            "value": "Ubuntu16.04.0-LTS"
          },
          "instanceCount": {
            "value": "[parameters('txnodeCount')]"
          },
          "storageAccounts": {
            "value": "[variables('storageAccounts')]"
          },
          "virtualNetworkName": {
            "value": "[reference('Consortium.Network').outputs.network.value.name]"
          },
          "username": {
            "value": "[parameters('username')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "scriptUri": {
            "value": "[variables('machineSetupScriptUri')]"
          },
          "scriptCommand": {
            "value": "[concat(variables('scriptCommand'), variables('contentRoot'), ' ', parameters('genesisUrl'), ' ',parameters('gethNetworkId'), ' ',parameters('dashboardSecret'),' ', reference('VM.Dashboard').outputs.ip.value, ' ', reference('VM.Dashboard').outputs.ip.value)]"
          },
          "networkConfiguration": {
            "value": {
              "subnet": {
                "id": "[reference('Consortium.Network').outputs.network.value.subnets.tx]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[reference('Consortium.Network').outputs.network.value.internal.poolId]"
                }
              ]
            }
          }
        }
      },
      "dependsOn": [
        "storageLoop",
        "VM.Dashboard",
        "Consortium.Network"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "VMSS.Miners",
      "apiVersion": "2015-11-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(variables('contentRoot'), '/template.vmss.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('resourceLocation')]"
          },
          "vmssName": {
            "value": "[concat(variables('namingInfix'), '-n-miner')]"
          },
          "vmSku": {
            "value": "[parameters('minerVMSku')]"
          },
          "image": {
            "value": "Ubuntu16.04.0-LTS"
          },
          "instanceCount": {
            "value": "[parameters('minerCount')]"
          },
          "storageAccounts": {
            "value": "[variables('storageAccounts')]"
          },
          "virtualNetworkName": {
            "value": "[reference('Consortium.Network').outputs.network.value.name]"
          },
          "username": {
            "value": "[parameters('username')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "scriptUri": {
            "value" :  "[variables('machineSetupScriptUri')]"
          },
          "scriptCommand": {
            "value": "[concat(variables('scriptCommand'), variables('contentRoot'), ' ', parameters('genesisUrl'), ' ',parameters('gethNetworkId'), ' ',parameters('dashboardSecret'), ' ', reference('VM.Dashboard').outputs.ip.value, ' ', reference('VM.Dashboard').outputs.ip.value, ' ', parameters('minerAddress'))]"
          },
          "networkConfiguration": {
            "value": {
              "subnet": {
                "id": "[reference('Consortium.Network').outputs.network.value.subnets.miners]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "storageLoop",
        "Consortium.Network",
        "VM.Dashboard",
        "VMSS.TxNodes"
      ]
    }
  ]
}