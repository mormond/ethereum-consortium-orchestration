{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "consortiumName": {
      "type": "string",
      "maxLength": 25,
      "metadata": {
        "description": "A short identifier to distinguish machines in this membership"
      }
    },
    "username": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "sshPublicKey": {
      "type": "string",
      "metadata": {
        "description": "ssh public key for connecting to VMs."
      }
    },
    "genesisUrl": {
      "type": "securestring",
      "metadata": {
        "description": "A url used to download the JSON which describes the genesis block"
      }
    },
    "gethNetworkId": {
      "type": "securestring",
      "metadata": {
        "description": "A unique id used to ensure only machines on the same network can talk to each other"
      }
    },
    "dashboardSecret": {
      "type": "securestring",
      "metadata": {
        "description": "A unique string to used to ensure only machines with the secret can post to the dashboard"
      }
    },
    "dashboardIp": {
      "type": "string"
    },
    "registrarIp": {
      "type": "string"
    },
    "minerAddress": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If miners is more than 0, then an address must be specified"
      }
    },
    "minerVMSku": {
      "defaultValue": "Standard_DS2_v2",
      "type": "string"
    },
    "minerCount": {
      "defaultValue": 2,
      "type": "int"
    },
    "txnodeVMSku": {
      "defaultValue": "Standard_DS1_v2",
      "type": "string"
    },
    "txnodeCount": {
      "defaultValue": 3,
      "type": "int"
    },
    "locationOverride": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Location to deploy resources. By default the template will use the Resource Group location"
      }
    },
    "contentRoot": {
      "defaultValue": "https://raw.githubusercontent.com/EthereumEx/ethereum-arm-templates/master/ethereum-consortium-blockchain-member",
      "type": "string"
    }
  },
  "variables": {
    "contentRoot": "[parameters('contentRoot')]",
    "resourceLocations": [
      "[resourceGroup().location]",
      "[parameters('locationOverride')]"
    ],
    "resourceLocation": "[tolower(variables('resourceLocations')[length(take(parameters('locationOverride'),1))])]",
    "deploymentId": "[toLower(substring(uniqueString(concat(resourceGroup().Id, variables('resourceLocation'))), 0, 10))]",
    "storageAccountType": "Premium_LRS",
    "saCount": 5,
    "namingInfix": "[toLower(parameters('consortiumName'))]",
    "storageAccounts": [
      "[concat('savmss', variables('deploymentId'), '01')]",
      "[concat('savmss', variables('deploymentId'), '02')]",
      "[concat('savmss', variables('deploymentId'), '03')]",
      "[concat('savmss', variables('deploymentId'), '04')]",
      "[concat('savmss', variables('deploymentId'), '05')]"
    ],
    "scriptName": "runScripts.sh",
    "machineSetupScriptUri": "[concat(variables('contentRoot'), '/', variables('scriptName'))]",
    "scriptCommand": "[concat('sh ', variables('scriptName'), ' ')]",
    "dNetworkName": "[concat('Consortium.', parameters('consortiumName'), '.Network')]",
    "dVMSSTx": "[concat('Consortium.', parameters('consortiumName'), '.Tx')]",
    "dVMSSMiners": "[concat('Consortium.', parameters('consortiumName'), '.Miners')]",
    "dScriptArguments": "[concat('Consortium.', parameters('consortiumName'), '.Arguments')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccounts')[copyIndex()]]",
      "apiVersion": "2015-06-15",
      "location": "[variables('resourceLocation')]",
      "copy": {
        "name": "storageLoop",
        "count": "[variables('saCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('dNetworkName')]",
      "apiVersion": "2015-01-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(variables('contentRoot'), '/template.network.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('resourceLocation')]"
          },
          "namingInfix": {
            "value": "[variables('namingInfix')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('dScriptArguments')]",
      "apiVersion": "2015-01-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(variables('contentRoot'), '/utilities/template.arrayToString.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "args" :{
            "value" :[
                "variables('scriptCommand')",
                "variables('contentRoot')", 
                "[parameters('genesisUrl')]", 
                "[parameters('gethNetworkId')]", 
                "[substring(uniqueString(reference(variables('dNetworkName')).outputs.network.value.id),0,10)]", 
                "[reference(variables('dNetworkName')).outputs.network.value.ip.ipAddress]",
                "[parameters('dashboardSecret')]",
                "[parameters('dashboardIp')]",
                "[parameters('registrarIp')]"
            ]
          },
          "delimiter" :{
            "value": " "
          },
          "contentRoot" : {
            "value": "[parameters('contentRoot')]"
          }
        }
      },
      "dependsOn": [
        "[variables('dNetworkName')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('dVMSSTx')]",
      "apiVersion": "2015-01-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(variables('contentRoot'), '/template.vmss.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('resourceLocation')]"
          },
          "vmssName": {
            "value": "[concat(variables('namingInfix'), '-n-tx')]"
          },
          "vmSku": {
            "value": "[parameters('txnodeVMSku')]"
          },
          "image": {
            "value": "Ubuntu16.04.0-LTS"
          },
          "instanceCount": {
            "value": "[parameters('txnodeCount')]"
          },
          "storageAccounts": {
            "value": "[variables('storageAccounts')]"
          },
          "virtualNetworkName": {
            "value": "[reference(variables('dNetworkName')).outputs.network.value.name]"
          },
          "username": {
            "value": "[parameters('username')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "scriptUri": {
            "value": "[variables('machineSetupScriptUri')]"
          },
          "scriptCommand": {
            "value": "[reference(variables('dScriptArguments')).outputs.result.value]"
          },
          "networkConfiguration": {
            "value": {
              "subnet": {
                "id": "[reference(variables('dNetworkName')).outputs.network.value.subnets.tx]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[reference(variables('dNetworkName')).outputs.network.value.internal.poolId]"
                }
              ]
            }
          }
        }
      },
      "dependsOn": [
        "storageLoop",
        "[variables('dNetworkName')]",
        "[variables('dScriptArguments')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('dVMSSMiners')]",
      "apiVersion": "2015-01-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(variables('contentRoot'), '/template.vmss.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('resourceLocation')]"
          },
          "vmssName": {
            "value": "[concat(variables('namingInfix'), '-n-miner')]"
          },
          "vmSku": {
            "value": "[parameters('minerVMSku')]"
          },
          "image": {
            "value": "Ubuntu16.04.0-LTS"
          },
          "instanceCount": {
            "value": "[parameters('minerCount')]"
          },
          "storageAccounts": {
            "value": "[variables('storageAccounts')]"
          },
          "virtualNetworkName": {
            "value": "[reference(variables('dNetworkName')).outputs.network.value.name]"
          },
          "username": {
            "value": "[parameters('username')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "scriptUri": {
            "value": "[variables('machineSetupScriptUri')]"
          },
          "scriptCommand": {
            "value": "[concat(reference(variables('dScriptArguments')).outputs.result.value, ' ', parameters('minerAddress'))]"
          },
          "networkConfiguration": {
            "value": {
              "subnet": {
                "id": "[reference(variables('dNetworkName')).outputs.network.value.subnets.miners]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "storageLoop",
        "[variables('dNetworkName')]",
        "[variables('dVMSSTx')]",
        "[variables('dScriptArguments')]"
      ]
    }
  ]
}